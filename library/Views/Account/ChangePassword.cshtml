 @using library.ViewModel;
@model ChangePasswordViewModel

@{
    ViewData["Title"] = "Change New Password";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Change New Password</h2>
        <form asp-action="ChangePassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            
            <div class="form-floating mb-3">
                <input asp-for="Email" class="form-control" placeholder="name@example.com" readonly/>
                <label asp-for="Email" class="form-label">Email</label>
               
            </div>
            <div class="form-floating mb-3">
                <input asp-for="NewPassword" class="form-control" placeholder="Newpassword" />
                <label asp-for="NewPassword" class="form-label">New Password</label>
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="ConfirmNewPassword" class="form-control" placeholder="ConfirmNewPassword" />
                <label asp-for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>


            <div>
                <button type="submit" value="ChangePassword" class="w-100 btn btn-lg btn-primary">Change Password</button>
            </div>
           

            <div class="text-center">
                <a asp-Controller="Account" asp-action="Login" class="btn btn-secondary mt-3">Back</a>
            </div>

        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }

}


